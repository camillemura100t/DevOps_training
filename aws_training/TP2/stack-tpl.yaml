AWSTemplateFormatVersion: 2010-09-09

Resources:
  Tp2Vpc:
    Type: 'AWS::EC2::VPC'
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock: 10.15.0.0/16
  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref Tp2Vpc
      CidrBlock: 10.15.0.0/24
  WebServerInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref ImageId
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - GroupSet:
            - !Ref WebServerSecurityGroup
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !Ref PublicSubnet
      UserData:
        Fn::Base64: |
          #!/bin/bash -xe
          yum update -y
          amazon-linux-extras enable php7.4
          yum install -y httpd
          yum install -y mariadb-server
          yum install -y php-cli php-pdo php-fpm php-json php-mysqlnd
          sudo service mariadb start
          sudo service httpd start
          mysqladmin -u root create blog

          cd /var/www/html
          sudo wget http://wordpress.org/latest.tar.gz
          sudo tar -xzvf latest.tar.gz
          sudo mv wordpress/* .
          sudo rm -rf wordpress
    DependsOn:
      - PublicRoute
  InternetGW:
    Type: 'AWS::EC2::InternetGateway'
    Properties: {}
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref Tp2Vpc
  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref InternetGW
      VpcId: !Ref Tp2Vpc
  PublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      GatewayId: !Ref InternetGW
      DestinationCidrBlock: 0.0.0.0/0
    DependsOn:
      - VPCGatewayAttachment
  SubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable
  WebServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref Tp2Vpc
      GroupDescription: Allow access from SSH, HTTP/HTTPS traffic
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref BucketName

Parameters:
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
      - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  ImageId:
    Description: AMI for the instance
    Type: AWS::EC2::Image::Id
    Default: ami-00c08ad1a6ca8ca7c
    ConstraintDescription: must be a valid AMI (official or customized).
  KeyName:
    Description: Name of an EC2 KeyPair to enable SSH access to the instance.
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SSHLocation:
    Description: ' The IP address range that can be used to access the web server using SSH.'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  BucketName:
    Description: Name of the S3 Bucket
    Type: String
    MinLength: '3'
    MaxLength: '63'
#    AllowedPattern: # to be defined
    ConstraintDescription: between 3 and 63 characters long / lowercase letters, numbers, dots (.), and hyphens (-) only / begin and end with a letter or number / not an IP address / unique ID in a partition.

# output important values for easy viewing in cloudformation dashboard

Outputs:
  InstanceId:
    Description: InstanceId of the first EC2 instance
    Value: !Ref WebServerInstance

  PublicDNS:
    Description: Public DNS Name of the EC2 instance
    Value: !GetAtt 
      - WebServerInstance
      - PublicDnsName

  PublicIP:
    Description: Public IP address of the EC2 instance
    Value: !GetAtt 
      - WebServerInstance
      - PublicIp